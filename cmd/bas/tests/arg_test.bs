package main

function main
	// Do the function prologue.
	prologue

	// try (9 + 1) + (1 - (5 + 6) * (2 + 4))
	local T1 64
	local T2 64
	mov T1 5
	mov T2 6
	add T2 T1
	forget T1

	local T3 64
	local T4 64
	mov T3 2
	mov T4 4
	add T4 T3
	forget T3
	
	imul T2 T4
	forget T4

	local T5 64
	mov T5 1

	sub T5 T2
	forget T2

	local T6 64
	local T7 64
	mov T6 9
	mov T7 1
	add T6 T7
	forget T7

	add T6 T5
	forget T5

	acquire rdi
	mov rdi T6
	forget T6
	// should print -55
	call puti
	release rdi

	// calculate (9 + 1) + (1 - (5 + 6) * (2 + 4)) using doSomeMath
	// We shouldn't be using any locals or other reserved registers right now,
	// so we won't bother acquiring.
	push 4
	mov r9 2
	mov r8 6
	mov rcx 5
	mov rdx 1
	mov rsi 1
	mov rdi 9
	call doSomeMath

	// should print -55 again.
	mov rdi rax
	call puti
	

	epilogue
	xor rax rax
	ret

// calculates (a + b) + (c - (d + e) * (f + g))
function doSomeMath
	 argi a 0
	 argi b 1
	 argi c 2
	 argi d 3
	 argi e 4
	 argi f 5
	 argi g 6

	 prologue

	 local T1 64
	 mov T1 f
	 add T1 g

	 local T2 64
	 mov T2 d
	 add T2 e

	 imul T2 T1
	 forget T1

	 local T3 64
	 mov T3 c
	 sub T3 T2
	 forget T2

	 local T5 64
	 mov T5 a
	 add T5 b
	 add T5 T3
	 forget T3

	 acquire rax
	 mov rax T5
	 forget T5

	 epilogue

	 ret
